// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IAssignAPermissionToARoleResponse {
    role_permission_assignments: any;
}

export default class AssignAPermissionToARoleResponse {
    readonly _role_permission_assignments: any;

    get rolePermissionAssignments(): any {
        return this._role_permission_assignments;
    }

    static rolePermissionAssignmentsValidate(
        rolePermissionAssignments: any,
    ): boolean {
        return;
    }

    constructor(props: IAssignAPermissionToARoleResponse) {
        this._role_permission_assignments = props.role_permission_assignments;
    }

    serialize(): IAssignAPermissionToARoleResponse {
        const data: IAssignAPermissionToARoleResponse = {
            role_permission_assignments: this._role_permission_assignments,
        };
        return data;
    }

    validate(): string[] {
        const validate = {};
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(
        props: Partial<IAssignAPermissionToARoleResponse>,
    ): AssignAPermissionToARoleResponse {
        return new AssignAPermissionToARoleResponse({
            ...this.serialize(),
            ...props,
        });
    }
}
