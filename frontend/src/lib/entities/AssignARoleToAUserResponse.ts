// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IAssignARoleToAUserResponse {
    role_user_assignments: any;
}

export default class AssignARoleToAUserResponse {
    readonly _role_user_assignments: any;

    get roleUserAssignments(): any {
        return this._role_user_assignments;
    }

    static roleUserAssignmentsValidate(roleUserAssignments: any): boolean {
        return;
    }

    constructor(props: IAssignARoleToAUserResponse) {
        this._role_user_assignments = props.role_user_assignments;
    }

    serialize(): IAssignARoleToAUserResponse {
        const data: IAssignARoleToAUserResponse = {
            role_user_assignments: this._role_user_assignments,
        };
        return data;
    }

    validate(): string[] {
        const validate = {};
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(
        props: Partial<IAssignARoleToAUserResponse>,
    ): AssignARoleToAUserResponse {
        return new AssignARoleToAUserResponse({...this.serialize(), ...props});
    }
}
