// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface ICreateTokenWithTokenMethodRequest {
    token: string;
}

export default class CreateTokenWithTokenMethodRequest {
    readonly _token: string;

    get token(): string {
        return this._token;
    }

    static tokenValidate(token: string): boolean {
        return typeof token === 'string' && !!token.trim();
    }

    constructor(props: ICreateTokenWithTokenMethodRequest) {
        this._token = props.token.trim();
    }

    serialize(): ICreateTokenWithTokenMethodRequest {
        const data: ICreateTokenWithTokenMethodRequest = {
            token: this._token,
        };
        return data;
    }

    validate(): string[] {
        const validate = {
            token:
                typeof this._token === 'string' && !this._token
                    ? true
                    : this._token,
        };
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(
        props: Partial<ICreateTokenWithTokenMethodRequest>,
    ): CreateTokenWithTokenMethodRequest {
        return new CreateTokenWithTokenMethodRequest({
            ...this.serialize(),
            ...props,
        });
    }
}
