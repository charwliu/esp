// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IInfoOfUserOrganizationRelationshipResponse {
    organization_user: any;
}

export default class InfoOfUserOrganizationRelationshipResponse {
    readonly _organization_user: any;

    get organizationUser(): any {
        return this._organization_user;
    }

    static organizationUserValidate(organizationUser: any): boolean {
        return;
    }

    constructor(props: IInfoOfUserOrganizationRelationshipResponse) {
        this._organization_user = props.organization_user;
    }

    serialize(): IInfoOfUserOrganizationRelationshipResponse {
        const data: IInfoOfUserOrganizationRelationshipResponse = {
            organization_user: this._organization_user,
        };
        return data;
    }

    validate(): string[] {
        const validate = {};
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(
        props: Partial<IInfoOfUserOrganizationRelationshipResponse>,
    ): InfoOfUserOrganizationRelationshipResponse {
        return new InfoOfUserOrganizationRelationshipResponse({
            ...this.serialize(),
            ...props,
        });
    }
}
