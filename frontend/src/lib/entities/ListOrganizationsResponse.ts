import Organization, {IOrganization} from './Organization';

// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IListOrganizationsResponse {
    organizations: IOrganization[];
}

export default class ListOrganizationsResponse {
    readonly _organizations: Organization[];

    get organizations(): Organization[] {
        return this._organizations;
    }

    constructor(props: IListOrganizationsResponse) {
        this._organizations = props.organizations.map(
            (p) => new Organization(p),
        );
    }

    serialize(): IListOrganizationsResponse {
        const data: IListOrganizationsResponse = {
            organizations: this._organizations.map((p) => p.serialize()),
        };
        return data;
    }

    validate(): string[] {
        const validate = {
            organizations: this._organizations.reduce(
                (result, p) => result && p.validate().length === 0,
                true,
            ),
        };
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(
        props: Partial<IListOrganizationsResponse>,
    ): ListOrganizationsResponse {
        return new ListOrganizationsResponse({...this.serialize(), ...props});
    }
}
