import Role, {IRole} from './Role';

// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IListRolesResponse {
    roles: IRole[];
}

export default class ListRolesResponse {
    readonly _roles: Role[];

    get roles(): Role[] {
        return this._roles;
    }

    constructor(props: IListRolesResponse) {
        this._roles = props.roles.map((p) => new Role(p));
    }

    serialize(): IListRolesResponse {
        const data: IListRolesResponse = {
            roles: this._roles.map((p) => p.serialize()),
        };
        return data;
    }

    validate(): string[] {
        const validate = {
            roles: this._roles.reduce(
                (result, p) => result && p.validate().length === 0,
                true,
            ),
        };
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(props: Partial<IListRolesResponse>): ListRolesResponse {
        return new ListRolesResponse({...this.serialize(), ...props});
    }
}
