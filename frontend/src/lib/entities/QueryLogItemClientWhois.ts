// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IQueryLogItemClientWhois {
    city?: string;
    country?: string;
    orgname?: string;
}

export default class QueryLogItemClientWhois {
    readonly _city: string | undefined;

    /** */
    get city(): string | undefined {
        return this._city;
    }

    readonly _country: string | undefined;

    /** */
    get country(): string | undefined {
        return this._country;
    }

    readonly _orgname: string | undefined;

    /** */
    get orgname(): string | undefined {
        return this._orgname;
    }

    constructor(props: IQueryLogItemClientWhois) {
        if (typeof props.city === 'string') {
            this._city = props.city.trim();
        }
        if (typeof props.country === 'string') {
            this._country = props.country.trim();
        }
        if (typeof props.orgname === 'string') {
            this._orgname = props.orgname.trim();
        }
    }

    serialize(): IQueryLogItemClientWhois {
        const data: IQueryLogItemClientWhois = {
        };
        if (typeof this._city !== 'undefined') {
            data.city = this._city;
        }
        if (typeof this._country !== 'undefined') {
            data.country = this._country;
        }
        if (typeof this._orgname !== 'undefined') {
            data.orgname = this._orgname;
        }
        return data;
    }

    validate(): string[] {
        const validate = {
            city: !this._city ? true : typeof this._city === 'string' && !this._city ? true : this._city,
            country: !this._country ? true : typeof this._country === 'string' && !this._country ? true : this._country,
            orgname: !this._orgname ? true : typeof this._orgname === 'string' && !this._orgname ? true : this._orgname,
        };
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(props: Partial<IQueryLogItemClientWhois>): QueryLogItemClientWhois {
        return new QueryLogItemClientWhois({ ...this.serialize(), ...props });
    }
}
