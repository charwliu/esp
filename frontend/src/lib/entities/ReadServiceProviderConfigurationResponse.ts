// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IReadServiceProviderConfigurationResponse {
    information: any;
}

export default class ReadServiceProviderConfigurationResponse {
    readonly _information: any;

    get information(): any {
        return this._information;
    }

    static informationValidate(information: any): boolean {
        return;
    }

    constructor(props: IReadServiceProviderConfigurationResponse) {
        this._information = props.information;
    }

    serialize(): IReadServiceProviderConfigurationResponse {
        const data: IReadServiceProviderConfigurationResponse = {
            information: this._information,
        };
        return data;
    }

    validate(): string[] {
        const validate = {};
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(
        props: Partial<IReadServiceProviderConfigurationResponse>,
    ): ReadServiceProviderConfigurationResponse {
        return new ReadServiceProviderConfigurationResponse({
            ...this.serialize(),
            ...props,
        });
    }
}
