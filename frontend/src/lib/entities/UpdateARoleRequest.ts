import Role, {IRole} from './Role';

// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IUpdateARoleRequest {
    role: IRole;
}

export default class UpdateARoleRequest {
    readonly _role: Role;

    get role(): Role {
        return this._role;
    }

    constructor(props: IUpdateARoleRequest) {
        this._role = new Role(props.role);
    }

    serialize(): IUpdateARoleRequest {
        const data: IUpdateARoleRequest = {
            role: this._role.serialize(),
        };
        return data;
    }

    validate(): string[] {
        const validate = {
            role: this._role.validate().length === 0,
        };
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(props: Partial<IUpdateARoleRequest>): UpdateARoleRequest {
        return new UpdateARoleRequest({...this.serialize(), ...props});
    }
}
