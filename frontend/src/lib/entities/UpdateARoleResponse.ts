import Role, {IRole} from './Role';

// This file was autogenerated. Please do not change.
// All changes will be overwrited on commit.
export interface IUpdateARoleResponse {
    values_updated: IRole;
}

export default class UpdateARoleResponse {
    readonly _values_updated: Role;

    get valuesUpdated(): Role {
        return this._values_updated;
    }

    constructor(props: IUpdateARoleResponse) {
        this._values_updated = new Role(props.values_updated);
    }

    serialize(): IUpdateARoleResponse {
        const data: IUpdateARoleResponse = {
            values_updated: this._values_updated.serialize(),
        };
        return data;
    }

    validate(): string[] {
        const validate = {
            values_updated: this._values_updated.validate().length === 0,
        };
        const isError: string[] = [];
        Object.keys(validate).forEach((key) => {
            if (!(validate as any)[key]) {
                isError.push(key);
            }
        });
        return isError;
    }

    update(props: Partial<IUpdateARoleResponse>): UpdateARoleResponse {
        return new UpdateARoleResponse({...this.serialize(), ...props});
    }
}
